using System;


namespace ErikTheCoder.Sandbox.LeaderlessReplication
{
    public static class Latency
    {
        public const int Min = 10;
        public const int Max = 50;
        private static readonly (int MinMs, int MaxMs)[,] _values;


        static Latency()
        {
            _values = new (int MinMs, int MaxMs)[,]
            {
                //               NA-1        NA-2        NA-3        NA-4        NA-5        SA-1        SA-2        SA-3        SA-4        SA-5        EU-1        EU-2        EU-3        EU-4        EU-5        AS-1        AS-2        AS-3        AS-4        AS-5
                /*NA-1*/ { (000, 000), (Min, Max), (Min, Max), (Min, Max), (040, 100), (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 900), (300, 900), (300, 900), (300, 900), (300, 900) },
                /*NA-2*/ { (Min, Max), (000, 000), (Min, Max), (Min, Max), (040, 100), (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 900), (300, 900), (300, 900), (300, 900), (300, 900) },
                /*NA-3*/ { (Min, Max), (Min, Max), (000, 000), (Min, Max), (040, 100), (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 900), (300, 900), (300, 900), (300, 900), (300, 900) },
                /*NA-4*/ { (Min, Max), (Min, Max), (Min, Max), (000, 000), (040, 100), (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 900), (300, 900), (300, 900), (300, 900), (300, 900) },
                /*NA-5*/ { (040, 100), (040, 100), (040, 100), (040, 100), (000, 000), (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 900), (300, 900), (300, 900), (300, 900), (300, 900) },
                /*SA-1*/ { (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (000, 000), (Min, Max), (Min, Max), (Min, Max), (Min, Max), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999) },
                /*SA-2*/ { (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (Min, Max), (000, 000), (Min, Max), (Min, Max), (Min, Max), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999) },
                /*SA-3*/ { (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (Min, Max), (Min, Max), (000, 000), (Min, Max), (Min, Max), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999) },
                /*SA-4*/ { (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (Min, Max), (Min, Max), (Min, Max), (000, 000), (Min, Max), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999) },
                /*SA-5*/ { (250, 500), (250, 500), (250, 500), (250, 500), (250, 500), (Min, Max), (Min, Max), (Min, Max), (Min, Max), (000, 000), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999) },
                /*EU-1*/ { (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (000, 000), (Min, Max), (Min, Max), (Min, Max), (Min, Max), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700) },
                /*EU-2*/ { (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (Min, Max), (000, 000), (Min, Max), (Min, Max), (Min, Max), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700) },
                /*EU-3*/ { (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (Min, Max), (Min, Max), (000, 000), (Min, Max), (Min, Max), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700) },
                /*EU-4*/ { (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (Min, Max), (Min, Max), (Min, Max), (000, 000), (Min, Max), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700) },
                /*EU-5*/ { (150, 400), (150, 400), (150, 400), (150, 400), (150, 400), (300, 600), (300, 600), (300, 600), (300, 600), (300, 600), (Min, Max), (Min, Max), (Min, Max), (Min, Max), (000, 000), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700) },
                /*AS-1*/ { (300, 900), (300, 900), (300, 900), (300, 900), (300, 900), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (000, 000), (Min, Max), (Min, Max), (Min, Max), (Min, Max) },
                /*AS-2*/ { (300, 900), (300, 900), (300, 900), (300, 900), (300, 900), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (000, 000), (Min, Max), (Min, Max), (Min, Max) },
                /*AS-3*/ { (300, 900), (300, 900), (300, 900), (300, 900), (300, 900), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (Min, Max), (000, 000), (Min, Max), (Min, Max) },
                /*AS-4*/ { (300, 900), (300, 900), (300, 900), (300, 900), (300, 900), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (Min, Max), (Min, Max), (000, 000), (Min, Max) },
                /*AS-5*/ { (300, 900), (300, 900), (300, 900), (300, 900), (300, 900), (500, 999), (500, 999), (500, 999), (500, 999), (500, 999), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (250, 700), (Min, Max), (Min, Max), (Min, Max), (000, 000) }
            };
        }


        public static (TimeSpan Min, TimeSpan Max) Get(int FromNodeId, int ToNodeId)
        {
            var (minMs, maxMs) = _values[FromNodeId, ToNodeId];
            return (TimeSpan.FromMilliseconds(minMs), TimeSpan.FromMilliseconds(maxMs));
        }
    }
}
